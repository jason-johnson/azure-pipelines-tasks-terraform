parameters:
  stage: ''

jobs:
- job: switch_workspaces_${{ parameters.stage }}
  steps:
    - task: DownloadPipelineArtifact@2
      displayName: download terraform templates
      inputs: 
        artifact: terraform_templates
        path: $(terraform_extension_dir)
    - task: charleszipp.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
      displayName: install terraform
      inputs:
        terraformVersion: 1.0.10
    - task: charleszipp.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform init'
      inputs:
        command: init
        workingDirectory: $(terraform_templates_dir)
        backendType: azurerm
        backendServiceArm: 'env_test'
        ensureBackend: true
        backendAzureRmResourceGroupName: rg-trfrm-${{ parameters.stage }}-eus-czp
        backendAzureRmResourceGroupLocation: eastus
        backendAzureRmStorageAccountName: sttrfrm${{ parameters.stage }}eusczp
        backendAzureRmStorageAccountSku: Standard_RAGRS
        backendAzureRmContainerName: azure-pipelines-terraform
        backendAzureRmKey: workspace_switch.tfstate
    - task: charleszipp.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: new workspace foo
      inputs:
        workingDirectory: $(terraform_templates_dir)
        command: workspace        
        workspaceSubCommand: new
        workspaceName: foo
    - task: charleszipp.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: new workspace foo skip existing
      inputs:
        workingDirectory: $(terraform_templates_dir)
        command: workspace
        workspaceSubCommand: new
        workspaceName: foo
        skipExistingWorkspace: true
    - task: charleszipp.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: select workspace default
      inputs:
        workingDirectory: $(terraform_templates_dir)
        command: workspace        
        workspaceSubCommand: select
        workspaceName: default
    - bash: |
        terraform workspace show
      displayName: show workspace
      workingDirectory: $(terraform_templates_dir)
    - bash: |
        terraform workspace delete foo
      displayName: delete new workspace
      workingDirectory: $(terraform_templates_dir)