parameters:
  stage: ''

jobs:
- job: local_exec_az_cli_${{ parameters.stage }}
  variables: 
    test_templates_dir: $(terraform_templates_dir)/local-exec-az-cli
  steps:
    - task: DownloadPipelineArtifact@2
      displayName: download terraform templates
      inputs: 
        artifact: terraform_templates
        path: $(terraform_extension_dir)
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform init'
      inputs:
        command: init
        workingDirectory: $(test_templates_dir)
        backendType: azurerm
        backendServiceArm: 'env_test'
        ensureBackend: true
        backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
        backendAzureRmResourceGroupLocation: $(backendAzureRmResourceGroupLocation)
        backendAzureRmStorageAccountName: $(backendAzureRmStorageAccountName)
        backendAzureRmStorageAccountSku: $(backendAzureRmStorageAccountSku)
        backendAzureRmContainerName: $(backendAzureRmContainerName)
        backendAzureRmKey: local_exec_az_cli.tfstate
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform validate'
      inputs:
        workingDirectory: $(test_templates_dir)
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform plan'
      inputs:
        command: plan
        workingDirectory: $(test_templates_dir)
        environmentServiceName: 'env_test'
        secureVarsFile: $(tf_variables_secure_file)
        commandOptions: '-out=$(System.DefaultWorkingDirectory)/terraform.tfplan'
        runAzLogin: true
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform apply'
      inputs:
        command: apply
        workingDirectory: $(test_templates_dir)
        environmentServiceName: 'env_test'
        commandOptions: '$(System.DefaultWorkingDirectory)/terraform.tfplan'
        runAzLogin: true
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform destroy'
      inputs:
        command: destroy
        workingDirectory: $(test_templates_dir)
        environmentServiceName: 'env_test'
        secureVarsFile: $(tf_variables_secure_file)
        runAzLogin: true