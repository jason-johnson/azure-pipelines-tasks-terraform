parameters:
  stage: ''

jobs:
- job: aws_self_configured_${{ parameters.stage }}
  variables: 
    test_templates_dir: $(terraform_templates_dir)/aws
  steps:
    - task: DownloadPipelineArtifact@2
      displayName: download terraform templates
      inputs: 
        artifact: terraform_templates
        path: $(terraform_extension_dir)
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
      displayName: install terraform
      inputs:
        terraformVersion: 1.0.10
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform init'
      inputs:
        command: init
        workingDirectory: $(test_templates_dir)
        backendType: self-configured
        commandOptions: -backend-config=bucket=s3-trfrm-${{ parameters.stage }}-eus-czp -backend-config=key=azure-pipelines-terraform/aws-self-config
        # The secure env file contains the following vars
        # AWS_DEFAULT_REGION, AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY
        # see also https://www.terraform.io/docs/language/settings/backends/s3.html#configuration
        secureVarsFile: self-configured-aws.env
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform validate'
      inputs:
        workingDirectory: $(test_templates_dir)
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform plan'
      inputs:
        command: plan
        workingDirectory: $(test_templates_dir)
        secureVarsFile: self-configured-aws.env
        commandOptions: '-out=$(System.DefaultWorkingDirectory)/terraform.tfplan'
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform apply'
      inputs:
        command: apply
        workingDirectory: $(test_templates_dir)
        secureVarsFile: self-configured-aws.env
        commandOptions: '$(System.DefaultWorkingDirectory)/terraform.tfplan'
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-${{ parameters.stage }}.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform destroy'
      inputs:
        command: destroy
        workingDirectory: $(test_templates_dir)
        secureVarsFile: self-configured-aws.env