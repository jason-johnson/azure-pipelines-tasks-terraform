parameters:
  stage: ''

stages:
- stage: publish_private_${{ parameters.stage }}
  variables:
    - group: env_${{ parameters.stage }}
  jobs:
  - deployment: publish_private_${{ parameters.stage }}
    displayName: publish private ${{ parameters.stage }}
    environment: marketplace_${{ parameters.stage }}  
    variables:
        GitVersion.Major: $[ stageDependencies.build_${{ parameters.stage }}.version.outputs['version.GitVersion.Major'] ]
        GitVersion.Minor: $[ stageDependencies.build_${{ parameters.stage }}.version.outputs['version.GitVersion.Minor'] ]
        GitVersion.Patch: $[ stageDependencies.build_${{ parameters.stage }}.version.outputs['version.GitVersion.Patch'] ]
    strategy:
      runOnce:
        deploy:
          steps:    
          - task: DownloadPipelineArtifact@2
            displayName: download terraform extension
            inputs: 
              artifact: terraform_extension
              path: $(terraform_extension_dir)
          - task: DownloadPipelineArtifact@2
            displayName: download terraform installer
            inputs: 
              artifact: terraform_installer
              path: $(terraform_extension_dir)
          - task: DownloadPipelineArtifact@2
            displayName: download terraform cli
            inputs: 
              artifact: terraform_cli
              path: $(terraform_extension_dir)
          - task: DownloadPipelineArtifact@2
            displayName: download views terraform plan
            inputs: 
              artifact: views_terraform_plan
              path: $(terraform_extension_dir)
          - task: TfxInstaller@3
            displayName: 'install tfx-cli'
            inputs:
              version: '0.8.x'
              checkLatest: true  
          - bash: tfx extension unpublish 
              --publisher $(marketplace_publisher) 
              --extension-id azure-pipelines-tasks-terraform-${{ parameters.stage }}
              -t $(marketplace_access_token)
            displayName: unpublish extension
          - task: PublishAzureDevOpsExtension@4
            name: publish
            inputs:
              connectedServiceName: 'marketplace_jasonbjohnson'
              rootFolder: $(terraform_extension_dir)
              patternManifest: |
               vss-extension.json
               vss-extension-${{ parameters.stage }}.json
              extensionVersion: $(GitVersion.Major).$(GitVersion.Minor).$(GitVersion.Patch)
              shareWith: $(marketplace_share_with)
          - task: InstallAzureDevOpsExtension@4
            displayName: 'Install Extension'
            inputs:
              connectedServiceName: 'marketplace_jasonbjohnson'
              publisherId: $(marketplace_publisher)
              extensionId: azure-pipelines-tasks-terraform-${{ parameters.stage }}
              accounts: $(ado_service_url)
          - task: Bash@3
            name: wait_tasks_terraform_installer
            inputs:
              filePath: $(Build.SourcesDirectory)/pipelines/publish/poll_task_install.sh
              arguments: -s $(ado_service_url) -t $(organization_access_token) -c 2b4600b9-5cd9-4e3b-9c8b-553c8e58383a          
          - task: Bash@3
            name: wait_tasks_terraform_cli
            inputs:
              filePath: $(terraform_extension_dir)/pipelines/publish/poll_task_install.sh
              arguments: -s $(ado_service_url) -t $(organization_access_token) -c 51355d76-dd54-4754-919d-bba27fdf59e4

              
