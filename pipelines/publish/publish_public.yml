parameters:
  stage: ''

stages:
- stage: publish_public_${{ parameters.stage }}
  variables:
    - group: env_${{ parameters.stage }}
  jobs:
  - deployment: publish_public_${{ parameters.stage }}
    displayName: publish public ${{ parameters.stage }}
    environment: marketplace_${{ parameters.stage }}  
    variables:
        GitVersion.Major: $[ stageDependencies.build_${{ parameters.stage }}.version.outputs['version.GitVersion.Major'] ]
        GitVersion.Minor: $[ stageDependencies.build_${{ parameters.stage }}.version.outputs['version.GitVersion.Minor'] ]
        GitVersion.Patch: $[ stageDependencies.build_${{ parameters.stage }}.version.outputs['version.GitVersion.Patch'] ]
    strategy:
      runOnce:
        deploy:
          steps:    
          - task: DownloadPipelineArtifact@2
            displayName: download terraform extension
            inputs: 
              artifact: terraform_extension
              path: $(terraform_extension_dir)
          - task: DownloadPipelineArtifact@2
            displayName: download terraform installer
            inputs: 
              artifact: terraform_installer
              path: $(terraform_extension_dir)
          - task: DownloadPipelineArtifact@2
            displayName: download terraform cli
            inputs: 
              artifact: terraform_cli
              path: $(terraform_extension_dir)
          - task: DownloadPipelineArtifact@2
            displayName: download views terraform plan
            inputs: 
              artifact: views_terraform_plan
              path: $(terraform_extension_dir)
          - task: TfxInstaller@3
            displayName: 'install tfx-cli'
            inputs:
              version: '0.8.x'
              checkLatest: true  
          - task: PublishAzureDevOpsExtension@3
            name: publish
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: 'marketplace_jasonbjohnson'
              cwd: $(terraform_extension_dir)
              extensionVersion: $(GitVersion.Major).$(GitVersion.Minor).$(GitVersion.Patch)            
              patternManifest: |
                vss-extension.json
                vss-extension-${{ parameters.stage }}.json

              
