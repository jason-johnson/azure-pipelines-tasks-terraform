trigger: none
pr: none

parameters:
  - name: tags
    type: string
    default: "1.0.5,0.7.11"
  - name: experimentalVersion
    default: "2"

resources:
  pipelines:
  - pipeline: main
    source: main
    trigger: true

variables:
  tf_variables_secure_file: 4a0c36e2-bb51-41ed-87b1-2e668c64bb69
  terraform_templates_dir: $(System.DefaultWorkingDirectory)/templates
  terraformVersion: 1.0.10

stages:
- template: templates/integration_tests.yml
  parameters:
    scenarios:
      - test/smoke_test.yml
      - test/publish_plan_results.yml
      - test/plan_with_command_options_var_file.yml
      - test/local_exec_az_cli.yml
      - test/init_with_ensure_backend_no_storage_account.yml
      - test/init_with_self_configured_backend.yml
      - test/switch_workspaces.yml
      # - test/aws_self_configured.yml
      # - test/aws_service_connection.yml
      - test/init_without_ensure_backend.yml
      # - test/gcp_credential_file.yml
      # - test/azurerm_mgmt_group_service_connection.yml       # will need another subscription to do this one
      - test/state_commands.yml

- stage: publish_public
  variables:
    - group: env_ga
  jobs:
  - job: version
    steps:
    - task: gitversion/setup@0
      displayName: install GitVersion
      inputs:
        versionSpec: '5.x'
    - task: gitversion/execute@0
      displayName: set version
      name: version

  - deployment: publish_public_ga
    dependsOn: version
    displayName: publish public ga
    environment: marketplace_ga
    variables:
        GitVersion.Major: $[ dependencies.version.outputs['version.GitVersion.Major'] ]
        GitVersion.Minor: $[ dependencies.version.outputs['version.GitVersion.Minor'] ]
        GitVersion.Patch: $[ dependencies.version.outputs['version.GitVersion.Patch'] ]
        GitVersion.CommitsSinceVersionSource: $[ dependencies.version.outputs['version.GitVersion.CommitsSinceVersionSource'] ]
    strategy:
      runOnce:
        deploy:
          steps:
          - template: templates/download_artifacts.yml
            parameters:
              tags: ${{ parameters.tags }}
              experimentalVersion: ${{ parameters.experimentalVersion }}
          - task: TfxInstaller@3
            displayName: 'install tfx-cli'
            inputs:
              version: '0.8.x'
              checkLatest: true
          - task: PublishAzureDevOpsExtension@3
            name: publish
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: 'marketplace_jasonbjohnson'
              cwd: $(terraform_extension_dir)
              extensionVersion: $(GitVersion.Major).$(GitVersion.Minor).$(GitVersion.Patch).$(GitVersion.CommitsSinceVersionSource)
              patternManifest: |
                vss-extension.json
                vss-extension-ga.json