pr:
  - main
trigger:
  batch: "true"
  branches:
    include: 
      - '*'
  tags:
    include:
    - '*'
  paths:
    exclude: 
      - '_test-agent/*'
      - '.vscode/*'
      - '.devcontainer/*'
  
variables:
  Agent.Source.Git.ShallowFetchDepth: 0
  tf_variables_secure_file: 4a0c36e2-bb51-41ed-87b1-2e668c64bb69
  marketplace_publisher: JasonBJohnson

pool:
  vmImage: ubuntu-latest

name: $(GitVersion.FullSemVer)

stages:
- stage: setup
  variables:
    - group: build
  jobs:
  - job: version
    steps:
    - task: gitversion/setup@0
      displayName: install GitVersion
      inputs:
        versionSpec: '5.x'
    - task: gitversion/execute@0
      displayName: set version
      name: version

  - job: tags
    steps:
    - script: scripts/max_tags.sh
      name: tags

- stage: build
  dependsOn: setup
  variables:
    - name: GitVersion.SemVer
      value: $[ dependencies.version.outputs['version.GitVersion.SemVer'] ]
    - name: GitVersion.Major
      value: $[ dependencies.version.outputs['version.GitVersion.Major'] ]
    - name: GitVersion.Minor
      value: $[ dependencies.version.outputs['version.GitVersion.Minor'] ]
    - name: GitVersion.Patch
      value: $[ dependencies.version.outputs['version.GitVersion.Patch'] ]
    - group: build
  jobs:
  - template: templates/build_tasks.yml
    parameters:
      instance: main
      workingDir: $(System.DefaultWorkingDirectory)

  - job: terraform_plan
    steps:
      - template: templates/build_npm.yml
        parameters:
          workingDir: $(System.DefaultWorkingDirectory)/views/terraform-plan
          artifact: terraform_plan

      # Unfortunately, terraform plan view needs some work to have it complay with test_npm.yml so we hard code the steps for now
      - task: Npm@1
        displayName: test
        inputs:
          workingDir: $(System.DefaultWorkingDirectory)/views/terraform-plan
          command: custom
          customCommand: run test
      - task: PublishTestResults@2
        displayName: test - publish results
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: 'results.xml'
          searchFolder: $(System.DefaultWorkingDirectory)/views/terraform-plan/.tests

  - job: terraform_templates
    steps:
      - task: CopyFiles@2
        displayName: terraform templates
        inputs:
          contents: |   
            templates/**/*
          targetFolder: $(Build.ArtifactStagingDirectory)/terraform_templates
      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)/terraform_templates'
          artifactName: terraform_templates
