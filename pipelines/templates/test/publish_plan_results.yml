parameters:
  - name: taskVersion
    default: 2

jobs:
- job: publish_plan_results_${{ parameters.taskVersion }}
  steps:
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-rc.azure-pipelines-tasks-terraform-installer.TerraformInstaller@${{ parameters.taskVersion }}
      displayName: install terraform
      inputs:
        terraformVersion: $(terraformVersion)
    - task: TerraformCLI@${{ parameters.taskVersion }}
      displayName: 'terraform init'
      inputs:
        command: init
        workingDirectory: $(terraform_templates_dir)
        backendType: azurerm
        backendServiceArm: 'env_test'
        backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
        backendAzureRmResourceGroupLocation: $(backendAzureRmResourceGroupLocation)
        backendAzureRmStorageAccountName: $(backendAzureRmStorageAccountName)
        backendAzureRmStorageAccountSku: $(backendAzureRmStorageAccountSku)
        backendAzureRmContainerName: $(backendAzureRmContainerName)
        backendAzureRmKey: publish_plan_results.tfstate
    - task: TerraformCLI@${{ parameters.taskVersion }}
      displayName: 'terraform plan'
      inputs:
        command: plan
        workingDirectory: $(terraform_templates_dir)
        environmentServiceName: 'env_test'
        secureVarsFile: $(tf_variables_secure_file)
        publishPlanResults: publish_plan_results_rc
        commandOptions: '-out=$(System.DefaultWorkingDirectory)/terraform.tfplan -detailed-exitcode'