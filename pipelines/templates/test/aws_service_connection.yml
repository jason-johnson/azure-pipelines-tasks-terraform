jobs:
- job: aws_service_connection_rc
  variables: 
    test_templates_dir: $(terraform_templates_dir)/aws
  steps:
    - task: DownloadPipelineArtifact@2
      displayName: download terraform templates
      inputs:
        buildType: specific
        pipeline: main
        artifact: terraform_templates
        path: $(terraform_extension_dir)
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-rc.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
      displayName: install terraform
      inputs:
        terraformVersion: $(terraformVersion)
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-rc.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform init'
      inputs:
        command: init
        workingDirectory: $(test_templates_dir)
        backendType: aws
        backendServiceAws: env_test_aws
        backendAwsRegion: us-east-1
        backendAwsBucket: s3-trfrm-rc-eus-czp
        backendAwsKey: 'azure-pipelines-terraform/aws-service-connection'
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-rc.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform validate'
      inputs:
        workingDirectory: $(test_templates_dir)
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-rc.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform plan'
      inputs:
        command: plan
        workingDirectory: $(test_templates_dir)
        providerServiceAws: env_test_aws
        providerAwsRegion: us-east-1
        commandOptions: '-out=$(System.DefaultWorkingDirectory)/terraform.tfplan'
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-rc.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform apply'
      inputs:
        command: apply
        workingDirectory: $(test_templates_dir)
        providerServiceAws: env_test_aws
        providerAwsRegion: us-east-1
        commandOptions: '$(System.DefaultWorkingDirectory)/terraform.tfplan'
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-rc.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'terraform destroy'
      inputs:
        command: destroy
        workingDirectory: $(test_templates_dir)
        providerServiceAws: env_test_aws
        providerAwsRegion: us-east-1