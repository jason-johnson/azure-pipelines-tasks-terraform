jobs:
- job: state_commands_rc
  steps:
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-rc.azure-pipelines-tasks-terraform-installer.TerraformInstaller@2
      displayName: install terraform
      inputs:
        terraformVersion: $(terraformVersion)
    - task: TerraformCLI@2
      displayName: 'terraform init'
      inputs:
        command: init
        workingDirectory: $(terraform_templates_dir)
        backendType: azurerm
        backendServiceArm: 'env_test'
        backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
        backendAzureRmResourceGroupLocation: $(backendAzureRmResourceGroupLocation)
        backendAzureRmStorageAccountName: $(backendAzureRmStorageAccountName)
        backendAzureRmStorageAccountSku: $(backendAzureRmStorageAccountSku)
        backendAzureRmContainerName: $(backendAzureRmContainerName)
        backendAzureRmKey: state_commands.tfstate
    - task: TerraformCLI@2
      displayName: 'terraform apply'
      inputs:
        command: apply
        workingDirectory: $(terraform_templates_dir)
        environmentServiceName: 'env_test'
        secureVarsFile: state_commands.vars
    - task: TerraformCLI@2
      displayName: list terraform resources
      inputs:
        workingDirectory: $(terraform_templates_dir)
        command: state
        stateSubCommand: list
    - task: TerraformCLI@2
      displayName: mv terraform resource
      inputs:
        workingDirectory: $(terraform_templates_dir)
        command: state
        stateSubCommand: mv
        stateMoveSource: random_string.rs
        stateMoveDestination: random_string.rs_new
    - task: TerraformCLI@2
      displayName: mv back terraform resource
      inputs:
        workingDirectory: $(terraform_templates_dir)
        command: state
        stateSubCommand: mv
        stateMoveSource: random_string.rs_new
        stateMoveDestination: random_string.rs
    - task: TerraformCLI@2
      displayName: rm terraform resource
      inputs:
        workingDirectory: $(terraform_templates_dir)
        command: state
        stateSubCommand: rm
        stateSubCommandAddresses: random_string.rs
    - task: TerraformCLI@2
      displayName: 'terraform destroy'
      inputs:
        command: destroy
        workingDirectory: $(terraform_templates_dir)
        secureVarsFile: state_commands.vars
        environmentServiceName: 'env_test'
