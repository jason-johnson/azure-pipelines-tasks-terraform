parameters:
  - name: taskVersion
    default: 2

jobs:
- job: switch_workspaces_${{ parameters.taskVersion }}
  steps:
    - task: JasonBJohnson.azure-pipelines-tasks-terraform-rc.azure-pipelines-tasks-terraform-installer.TerraformInstaller@${{ parameters.taskVersion }}
      displayName: install terraform
      inputs:
        terraformVersion: $(terraformVersion)
    - task: TerraformCLI@${{ parameters.taskVersion }}
      displayName: 'terraform init'
      inputs:
        command: init
        workingDirectory: $(terraform_templates_dir)
        backendType: azurerm
        backendServiceArm: 'env_test'
        ensureBackend: true
        backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
        backendAzureRmResourceGroupLocation: $(backendAzureRmResourceGroupLocation)
        backendAzureRmStorageAccountName: $(backendAzureRmStorageAccountName)
        backendAzureRmStorageAccountSku: $(backendAzureRmStorageAccountSku)
        backendAzureRmContainerName: $(backendAzureRmContainerName)
        backendAzureRmKey: workspace_switch.tfstate
    - task: TerraformCLI@${{ parameters.taskVersion }}
      displayName: new workspace foo
      inputs:
        workingDirectory: $(terraform_templates_dir)
        command: workspace        
        workspaceSubCommand: new
        workspaceName: foo
    - task: TerraformCLI@${{ parameters.taskVersion }}
      displayName: new workspace foo skip existing
      inputs:
        workingDirectory: $(terraform_templates_dir)
        command: workspace
        workspaceSubCommand: new
        workspaceName: foo
        skipExistingWorkspace: true
    - task: TerraformCLI@${{ parameters.taskVersion }}
      displayName: select workspace default
      inputs:
        workingDirectory: $(terraform_templates_dir)
        command: workspace        
        workspaceSubCommand: select
        workspaceName: default
    - bash: |
        terraform workspace show
      displayName: show workspace
      workingDirectory: $(terraform_templates_dir)
    - bash: |
        terraform workspace delete foo
      displayName: delete new workspace
      workingDirectory: $(terraform_templates_dir)